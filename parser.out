Grammar:

Rule 0     S' -> text
Rule 1     text -> VALUE
Rule 2     text -> text text
Rule 3     text -> TEXT

Terminals, with rules where they appear:

TEXT                 : 3
VALUE                : 1
error                : 

Nonterminals, with rules where they appear:

text                 : 2 2 0


state 0

    (0) S' -> . text
    (1) text -> . VALUE
    (2) text -> . text text
    (3) text -> . TEXT
    VALUE           shift and go to state 2
    TEXT            shift and go to state 3

    text                           shift and go to state 1

state 1

    (0) S' -> text .
    (2) text -> text . text
    (1) text -> . VALUE
    (2) text -> . text text
    (3) text -> . TEXT
    VALUE           shift and go to state 2
    TEXT            shift and go to state 3

    text                           shift and go to state 4

state 2

    (1) text -> VALUE .
    VALUE           reduce using rule 1 (text -> VALUE .)
    TEXT            reduce using rule 1 (text -> VALUE .)
    $end            reduce using rule 1 (text -> VALUE .)


state 3

    (3) text -> TEXT .
    VALUE           reduce using rule 3 (text -> TEXT .)
    TEXT            reduce using rule 3 (text -> TEXT .)
    $end            reduce using rule 3 (text -> TEXT .)


state 4

    (2) text -> text text .
    (2) text -> text . text
    (1) text -> . VALUE
    (2) text -> . text text
    (3) text -> . TEXT
  ! shift/reduce conflict for VALUE resolved as shift
  ! shift/reduce conflict for TEXT resolved as shift
    $end            reduce using rule 2 (text -> text text .)
    VALUE           shift and go to state 2
    TEXT            shift and go to state 3

    text                           shift and go to state 4

Conflicts:

shift/reduce conflict for VALUE in state 4 resolved as shift
shift/reduce conflict for TEXT in state 4 resolved as shift